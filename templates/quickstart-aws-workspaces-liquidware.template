{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template is intended to be deployed into an existing VPC with two public subnets. It will launch 2 LiquidLabs AMI from the AWS MarketPlace. The LiquidLabs MarketPlace AMI instance for Stratusphere UX and ProfileUnity. The instances will be configured using the parameters in this template.",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "VPCID",
                        "VPCCIDR",
                        "PublicSubnet1ID",
                        "PublicSubnet2ID",
                        "RemoteAccessCIDR"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon EC2 Configuration"
                    },
                    "Parameters": [
                        "KeyPairName",
                        "ProfileUnityInstanceType",
                        "StratusphereInstanceType"
                    ]
                },
                {
                    "Label": {
                        "default": "Directory Services Information"
                    },
                    "Parameters": [
                        "DomainAdminUser",
                        "DomainAdminPassword",
                        "DomainNetBIOSName",
                        "DomainDNSName",
                        "StratusphereInstanceType",
                        "DNSIPAddress",
                        "DomainMemberSGID"
                    ]
                },
                {
                    "Label": {
                        "default": "AWS Quick Start Configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix"
                    ]
                }
            ],
            "ParameterLabels": {
                "DomainAdminUser": {
                    "default": "Enter the domain admin username for your Directory Service construct. ei Admin"
                },
                "DomainAdminPassword": {
                    "default": "Enter the domain password for your Directory Service"
                },
                "DomainNetBIOSName": {
                    "default": "Enter the NetBios Name"
                },
                "DomainDNSName": {
                    "default": "Enter the domain name for your Directory. (ei: corp.example.com)"
                },
                "DNSIPAddress": {
                    "default": "Enter the DNS IP(s) for your Directory. (ei: 10.0.0.1)"
                },
                "DomainMemberSGID": {
                    "default": "Enter the security group id for your Directory"
                },
                "ProfileUnityInstanceType": {
                    "default": "ProfileUnity Instance Type"
                },
                "KeyPairName": {
                    "default": "Key Pair Name"
                },
                "PublicSubnet1ID": {
                    "default": "Public Subnet 1 ID"
                },
                "PublicSubnet2ID": {
                    "default": "Public Subnet 2 ID"
                },
                "QSS3BucketName": {
                    "default": "Quick Start S3 Bucket Name"
                },
                "QSS3KeyPrefix": {
                    "default": "Quick Start S3 Key Prefix"
                },
                "RemoteAccessCIDR": {
                    "default": "Allowed External Access CIDR"
                },
                "VPCCIDR": {
                    "default": "VPC CIDR"
                },
                "VPCID": {
                    "default": "VPC ID"
                }
            }
        }
    },
    "Parameters": {
        "ProfileUnityInstanceType": {
            "AllowedValues": [
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge"
            ],
            "Default": "t2.medium",
            "Description": "Amazon EC2 instance type for the ProfileUnity instances",
            "Type": "String"
        },
        "StratusphereInstanceType": {
            "AllowedValues": [
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge"
            ],
            "Default": "t2.micro",
            "Description": "Amazon EC2 instance type for the Stratusphere instances",
            "Type": "String"
        },
        "DomainAdminPassword": {
            "AllowedPattern": "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
            "Description": "Password for the domain admin user. Must be at least 8 characters containing letters, numbers and symbols",
            "MaxLength": "32",
            "MinLength": "8",
            "NoEcho": "true",
            "Type": "String"
        },
        "DomainAdminUser": {
            "AllowedPattern": "[a-zA-Z0-9]*",
            "Default": "Admin",
            "Description": "User name for the account that will be added as Domain Administrator. This is separate from the default \"Administrator\" account",
            "MaxLength": "25",
            "MinLength": "5",
            "Type": "String"
        },
        "DomainDNSName": {
            "AllowedPattern": "[a-zA-Z0-9\\-]+\\..+",
            "Default": "example.com",
            "Description": "Fully qualified domain name (FQDN) of the forest root domain e.g. corp.example.com",
            "MaxLength": "25",
            "MinLength": "3",
            "Type": "String"
        },
        "DNSIPAddress": {
            "Default": "10.0.157.201, 10.0.134.178",
            "Description": "The IP addresses for your Directory Service. This can be found in the details of your DS. e.g. 10.0.0.1, 10.0.0.2",
            "Type": "String"
        },
        "DomainMemberSGID": {
            "Description": "ID of the Domain Member Security Group (e.g., sg-7f16e910)",
            "Type": "AWS::EC2::SecurityGroup::Id"
        },
        "DomainNetBIOSName": {
            "AllowedPattern": "[a-zA-Z0-9\\-]+",
            "Default": "example",
            "Description": "NetBIOS name of the domain (upto 15 characters) for users of earlier versions of Windows e.g. CORP",
            "MaxLength": "15",
            "MinLength": "1",
            "Type": "String"
        },
        "KeyPairName": {
            "Description": "Enter a Public/private key pair. If you do not have one in this region, please create it before continuing",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "PublicSubnet1ID": {
            "Description": "ID of the public subnet 1 in Availability Zone 1 (e.g., subnet-e3246d8e)",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PublicSubnet2ID": {
            "Description": "ID of the public subnet 2 in Availability Zone 2 (e.g., subnet-e3246d8e)",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "quickstart-reference",
            "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-/]*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Default": "aws/workspaces/liquidware/latest/",
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Type": "String"
        },
        "RemoteAccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
            "Description": "Allowed CIDR block for external SSH access to the ProfileUnitys",
            "Type": "String"
        },
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "Must be a valid IP range in x.x.x.x/x notation",
            "Default": "10.0.0.0/16",
            "Description": "CIDR Block for the VPC.",
            "Type": "String"
        },
        "VPCID": {
            "Description": "ID of the VPC (e.g., vpc-0343606e)",
            "Type": "AWS::EC2::VPC::Id"
        }
    },
    "Rules": {
        "SubnetsInVPC": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::EachMemberIn": [
                            {
                                "Fn::ValueOfAll": [
                                    "AWS::EC2::Subnet::Id",
                                    "VpcId"
                                ]
                            },
                            {
                                "Fn::RefAll": "AWS::EC2::VPC::Id"
                            }
                        ]
                    },
                    "AssertDescription": "All subnets must exist in the VPC"
                }
            ]
        }
    },
    "Mappings": {
        "AWSAMIRegionMap": {
            "AMI": {
                "STRATUSUXHVM": "AWS-8491b2e5-a03f-4c7f-9a11-5433e8203794-ami-14192003.3",
                "PROFILEUNITYHVM": "TBD",
                "AMZNLINUXHVM": "amzn-ami-hvm-2017.03.1.20170812-x86_64-gp2",
                "CENTOS7HVM": "CentOS Linux 7 x86_64 HVM EBS 1704_01-b7ee8a69-ee97-4a49-9e68-afaee216db2e-ami-d52f5bc3.4",
                "US1604HVM": "ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-20170811"
            },
            "ap-northeast-1": {
                "STRATUSUXHVM": "ami-787ece19",
                "PROFILEUNITYHVM": "",
                "AMZNLINUXHVM": "ami-4af5022c",
                "CENTOS7HVM": "ami-29d1e34e",
                "US1604HVM": "ami-0417e362"
            },
            "ap-northeast-2": {
                "STRATUSUXHVM": "ami-dde93eb3",
                "PROFILEUNITYHVM": "",
                "AMZNLINUXHVM": "ami-8663bae8",
                "CENTOS7HVM": "ami-08e93466",
                "US1604HVM": "ami-536ab33d"
            },
            "ap-south-1": {
                "STRATUSUXHVM": "ami-457d0a2a",
                "PROFILEUNITYHVM": "",
                "AMZNLINUXHVM": "ami-d7abd1b8",
                "CENTOS7HVM": "ami-3c0e7353",
                "US1604HVM": "ami-df413bb0"
            },
            "ap-southeast-1": {
                "STRATUSUXHVM": "ami-e975d88a",
                "PROFILEUNITYHVM": "",
                "AMZNLINUXHVM": "ami-fdb8229e",
                "CENTOS7HVM": "ami-7d2eab1e",
                "US1604HVM": "ami-9f28b3fc"
            },
            "ap-southeast-2": {
                "STRATUSUXHVM": "ami-32142d51",
                "PROFILEUNITYHVM": "",
                "AMZNLINUXHVM": "ami-30041c53",
                "CENTOS7HVM": "ami-34171d57",
                "US1604HVM": "ami-bb1901d8"
            },
            "ca-central-1": {
                "STRATUSUXHVM": "ami-6f58ea0b",
                "PROFILEUNITYHVM": "",
                "AMZNLINUXHVM": "ami-5ac17f3e",
                "CENTOS7HVM": "ami-28823e4c",
                "US1604HVM": "ami-a9c27ccd"
            },
            "eu-central-1": {
                "AMZNLINUXHVM": "ami-657bd20a",
                "CENTOS7HVM": "ami-fa2df395",
                "US1604HVM": "ami-958128fa"
            },
            "eu-west-1": {
                "STRATUSUXHVM": "ami-e65c0595",
                "PROFILEUNITYHVM": "",
                "AMZNLINUXHVM": "ami-ebd02392",
                "CENTOS7HVM": "ami-061b1560",
                "US1604HVM": "ami-674cbc1e"
            },
            "eu-west-2": {
                "STRATUSUXHVM": "ami-7fc7cd1b",
                "PROFILEUNITYHVM": "",
                "AMZNLINUXHVM": "ami-489f8e2c",
                "CENTOS7HVM": "ami-e05a4d84",
                "US1604HVM": "ami-03998867"
            },
            "sa-east-1": {
                "STRATUSUXHVM": "ami-012eb06d",
                "PROFILEUNITYHVM": "",
                "AMZNLINUXHVM": "ami-d27203be",
                "CENTOS7HVM": "ami-b31a75df",
                "US1604HVM": "ami-a41869c8"
            },
            "us-east-1": {
                "STRATUSUXHVM": "ami-4a8ed42f",
                "PROFILEUNITYHVM": "ami-8228f5f8",
                "AMZNLINUXHVM": "ami-4fffc834",
                "CENTOS7HVM": "ami-46c1b650",
                "US1604HVM": "ami-1d4e7a66"
            },
            "us-east-2": {
                "STRATUSUXHVM": "ami-4a8ed42f",
                "PROFILEUNITYHVM": "",
                "AMZNLINUXHVM": "ami-ea87a78f",
                "CENTOS7HVM": "ami-18f8df7d",
                "US1404HVM": "ami-df81a1ba",
                "US1604HVM": "ami-dbbd9dbe"
            },
            "us-west-1": {
                "STRATUSUXHVM": "ami-510e5931",
                "PROFILEUNITYHVM": "",
                "AMZNLINUXHVM": "ami-3a674d5a",
                "CENTOS7HVM": "ami-f5d7f195",
                "US1604HVM": "ami-969ab1f6"
            },
            "us-west-2": {
                "STRATUSUXHVM": "ami-c9f65fa9",
                "PROFILEUNITYHVM": "ami-6b963213",
                "AMZNLINUXHVM": "ami-aa5ebdd2",
                "CENTOS7HVM": "ami-f4533694",
                "US1604HVM": "ami-8803e0f0"
            }
        },
        "LinuxAMINameMap": {
            "Amazon-Linux-HVM": {
                "Code": "AMZNLINUXHVM"
            },
            "CentOS-7-HVM": {
                "Code": "CENTOS7HVM"
            },
            "Ubuntu-Server-16.04-LTS-HVM": {
                "Code": "US1604HVM"
            }
        },
        "LiquidLabAMINameMap": {
            "StratusphereUX-Linux-HVM": {
                "Code": "STRATUSUXHVM"
            },
            "ProfileUnity-Windows-HVM": {
                "Code": "PROFILEUNITYHVM"
            }
        }
    },
    "Conditions": {
        "GovCloudCondition": {
            "Fn::Equals": [
                {
                    "Ref": "AWS::Region"
                },
                "us-gov-west-1"
            ]
        }
    },
    "Resources": {
        "ProfileUnityInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "ProfileUnityHostRole"
                    }
                ]
            }
        },
        "StratusphereInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "StratusphereHostRole"
                    }
                ]
            }
        },
        "ProfileUnityHostRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Action": [
                                        "s3:GetObject"
                                    ],
                                    "Resource": {
                                        "Fn::Sub": [
                                            "arn:${Partition}:s3:::${QSS3BucketName}/${QSS3KeyPrefix}*",
                                            {
                                                "Partition": {
                                                    "Fn::If": [
                                                        "GovCloudCondition",
                                                        "aws-us-gov",
                                                        "aws"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "Effect": "Allow"
                                }
                            ]
                        },
                        "PolicyName": "aws-quick-start-s3-policy"
                    }
                ],
                "Path": "/",
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Effect": "Allow"
                        }
                    ],
                    "Version": "2012-10-17"
                }
            }
        },
        "StratusphereHostRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Action": [
                                        "s3:GetObject"
                                    ],
                                    "Resource": {
                                        "Fn::Sub": [
                                            "arn:${Partition}:s3:::${QSS3BucketName}/${QSS3KeyPrefix}*",
                                            {
                                                "Partition": {
                                                    "Fn::If": [
                                                        "GovCloudCondition",
                                                        "aws-us-gov",
                                                        "aws"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "Effect": "Allow"
                                }
                            ]
                        },
                        "PolicyName": "aws-quick-start-s3-policy"
                    },
                    {
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Action": [
                                        "ec2:AssociateAddress",
                                        "ec2:DescribeAddresses"
                                    ],
                                    "Resource": [
                                        "*"
                                    ],
                                    "Effect": "Allow"
                                }
                            ]
                        },
                        "PolicyName": "ProfileUnity-eip-policy"
                    }
                ],
                "Path": "/",
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Effect": "Allow"
                        }
                    ],
                    "Version": "2012-10-17"
                }
            }
        },
        "ProfileUnityWaitHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "ProfileUnityWaitCondition": {
            "Type" : "AWS::CloudFormation::WaitCondition",
            "Properties": {
                "Handle": { "Ref": "ProfileUnityWaitHandle" },
                "Timeout": "2700",
                "Count": "1"      
            }
        },
        "ProfileUnityInstance": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": "ProfileUnityWaitHandle",
            "Metadata": {
                "AWS::CloudFormation::Authentication": {
                    "S3AccessCreds": {
                        "type": "S3",
                        "roleName": {
                            "Ref": "ProfileUnityHostRole"
                        },
                        "buckets": [
                            {
                                "Ref": "QSS3BucketName"
                            }
                        ]
                    }
                },
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "config": [
                            "setup",
                            "prep"
                        ]
                    },
                    "setup": {
                        "files": {
                            "C:\\cfn\\cfn-hup.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[main]\n",
                                            "stack=",
                                            {
                                                "Ref": "AWS::StackId"
                                            },
                                            "\n",
                                            "region=",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "C:\\cfn\\hooks.d\\cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.update\n",
                                            "path=Resources.ProfileUnityInstance.Metadata.AWS::CloudFormation::Init\n",
                                            "action=cfn-init.exe -v -s ",
                                            {
                                                "Ref": "AWS::StackId"
                                            },
                                            " -r ProfileUnityInstance",
                                            " --region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "C:\\cfn\\scripts\\Unzip-Archive.ps1": {
                                "source": {
                                    "Fn::Sub": [
                                        "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Unzip-Archive.ps1",
                                        {
                                            "QSS3Region": {
                                                "Fn::If": [
                                                    "GovCloudCondition",
                                                    "s3-us-gov-west-1",
                                                    "s3"
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "authentication": "S3AccessCreds"
                            },
                            "C:\\cfn\\modules\\AWSQuickStart.zip": {
                                "source": {
                                    "Fn::Sub": [
                                        "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/modules/AWSQuickStart.zip",
                                        {
                                            "QSS3Region": {
                                                "Fn::If": [
                                                    "GovCloudCondition",
                                                    "s3-us-gov-west-1",
                                                    "s3"
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "authentication": "S3AccessCreds"
                            },
                            "C:\\cfn\\scripts\\Join-Domain.ps1": {
                                "source": {
                                    "Fn::Sub": [
                                        "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Join-Domain.ps1",
                                        {
                                            "QSS3Region": {
                                                "Fn::If": [
                                                    "GovCloudCondition",
                                                    "s3-us-gov-west-1",
                                                    "s3"
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "authentication": "S3AccessCreds"
                            },
                            "C:\\cfn\\scripts\\Disable-CredSSP.ps1": {
                                "source": {
                                    "Fn::Sub": [
                                        "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Disable-CredSSP.ps1",
                                        {
                                            "QSS3Region": {
                                                "Fn::If": [
                                                    "GovCloudCondition",
                                                    "s3-us-gov-west-1",
                                                    "s3"
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "authentication": "S3AccessCreds"
                            },
                            "C:\\cfn\\scripts\\Enable-CredSSP.ps1": {
                                "source": {
                                    "Fn::Sub": [
                                        "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Enable-CredSSP.ps1",
                                        {
                                            "QSS3Region": {
                                                "Fn::If": [
                                                    "GovCloudCondition",
                                                    "s3-us-gov-west-1",
                                                    "s3"
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "authentication": "S3AccessCreds"
                            }
                        },
                        "commands": {
                            "a-set-execution-policy": {
                                "command": "powershell.exe -Command \"Set-ExecutionPolicy RemoteSigned -Force\"",
                                "waitAfterCompletion": "0"
                            },
                            "b-unpack-quickstart-module": {
                                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSQuickStart.zip -Destination C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\",
                                "waitAfterCompletion": "0"
                            },
                            "c-init-quickstart-module": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"",
                                            "New-AWSQuickStartWaitHandle -Handle '",
                                            {
                                                "Ref": "ProfileUnityWaitHandle"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        },
                        "services": {
                            "windows": {
                                "cfn-hup": {
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": [
                                        "C:\\cfn\\cfn-hup.conf",
                                        "C:\\cfn\\hooks.d\\cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        }
                    },
                    "prep": {
                        "commands": {
                            "a-disable-win-fw": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"Get-NetFirewallProfile | Set-NetFirewallProfile -Enabled False\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-rename-computer": {
                                "command": "powershell.exe -Command \"Rename-Computer -NewName 'ProfileUnityInstance' -Restart\"",
                                "waitAfterCompletion": "forever"
                            },
                            "c-join-domain": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\Join-Domain.ps1 -DomainName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -UserName '",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "\\",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -Password '",
                                            {
                                                "Ref": "DomainAdminPassword"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "d-enable-credssp": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\Enable-CredSSP.ps1",
                                "waitAfterCompletion": "0"
                            },
                            "f-disable-credssp": {
                                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\Disable-CredSSP.ps1\"",
                                "waitAfterCompletion": "0"
                            },
                            "g-signal-success": {
                                "command": "powershell -Command \"Write-AWSQuickStartStatus\"",
                                "waitAfterCompletion": "0"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "ImageId": "ami-6b963213",
                "IamInstanceProfile": {
                    "Ref": "ProfileUnityHostProfile"
                },
                "InstanceType": {
                    "Ref": "ProfileUnityInstanceType"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "ProfileUnitySecurityGroup"
                    }
                ],
                "SubnetId": {
                    "Ref": "PublicSubnet1ID"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "ProfileUnityInstance"
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "100",
                            "VolumeType": "gp2"
                        }
                    },
                    {
                        "DeviceName": "/dev/xvdb",
                        "VirtualName": "ephemeral0"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "<script>\n",
                                "cfn-init.exe -v -c config -s ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " -r ProfileUnityInstance ",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "</script>"
                            ]
                        ]
                    }
                }
            }
        },
        "ProfileUnityAlarmInstanceRecovery": {
            "DependsOn": "ProfileUnityInstance",
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmDescription": "Trigger a recovery when instance status check fails for 10 consecutive minutes.",
                "Namespace": "AWS/EC2",
                "MetricName": "StatusCheckFailed_System",
                "Statistic": "Minimum",
                "Period": "60",
                "EvaluationPeriods": "10",
                "ComparisonOperator": "GreaterThanThreshold",
                "Threshold": "0",
                "AlarmActions": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:aws:automate:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":ec2:recover"
                            ]
                        ]
                    }
                ],
                "Dimensions": [
                    {
                        "Name": "InstanceId",
                        "Value": {
                            "Ref": "ProfileUnityInstance"
                        }
                    }
                ]
            }
        },
        "StatusphereAlarmInstanceRecovery": {
            "DependsOn": "StratusphereInstance",
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmDescription": "Trigger a recovery when instance status check fails for 10 consecutive minutes.",
                "Namespace": "AWS/EC2",
                "MetricName": "StatusCheckFailed_System",
                "Statistic": "Minimum",
                "Period": "60",
                "EvaluationPeriods": "10",
                "ComparisonOperator": "GreaterThanThreshold",
                "Threshold": "0",
                "AlarmActions": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:aws:automate:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":ec2:recover"
                            ]
                        ]
                    }
                ],
                "Dimensions": [
                    {
                        "Name": "InstanceId",
                        "Value": {
                            "Ref": "ProfileUnityInstance"
                        }
                    }
                ]
            }
        },
        "ProfileUnityHostProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Roles": [
                    {
                        "Ref": "ProfileUnityHostRole"
                    }
                ],
                "Path": "/"
            }
        },
        "StatusphereHostProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Roles": [
                    {
                        "Ref": "ProfileUnityHostRole"
                    }
                ],
                "Path": "/"
            }
        },
        "EIP1": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc",
                "InstanceId": {
                    "Ref": "ProfileUnityInstance"
                }
            }
        },
        "EIP2": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc",
                "InstanceId": {
                    "Ref": "StratusphereInstance"
                }
            }
        },
        "StratusphereInstance": {
            "Type": "AWS::EC2::Instance",
            "Metadata": {
                "AWS::CloudFormation::Authentication": {
                    "S3AccessCreds": {
                        "type": "S3",
                        "roleName": {
                            "Ref": "StratusphereHostRole"
                        },
                        "buckets": [
                            {
                                "Ref": "QSS3BucketName"
                            }
                        ]
                    }
                },
                "AWS::CloudFormation::Init": {
                    "config": {
                        "files": {
                            "/tmp/stratusphere_bootstrap.sh": {
                                "source": {
                                    "Fn::Sub": [
                                        "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/stratusphere_bootstrap.sh",
                                        {
                                            "QSS3Region": {
                                                "Fn::If": [
                                                    "GovCloudCondition",
                                                    "s3-us-gov-west-1",
                                                    "s3"
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "mode": "000550",
                                "owner": "root",
                                "group": "root",
                                "authentication": "S3AccessCreds"
                            }
                        },
                        "commands": {
                            "b-bootstrap": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "./tmp/stratusphere_bootstrap.sh",
                                            "\n"
                                        ]
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Properties": {
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "IamInstanceProfile": {
                    "Ref": "StratusphereInstanceProfile"
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "STRATUSUXHVM"
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "StratusphereInstance"
                    }
                ],
                "SecurityGroupIds": [
                    {
                        "Ref": "StratusphereSecurityGroup"
                    }
                ],
                "SubnetId": {
                    "Ref": "PublicSubnet1ID"
                },
                "InstanceType": {
                    "Ref": "ProfileUnityInstanceType"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                "yum update -y\n",
                                "export PATH=$PATH:/usr/local/bin\n",
                                "which pip &> /dev/null\n",
                                "if [ $? -ne 0 ] ; then\n",
                                "    echo \"PIP NOT INSTALLED\"\n",
                                "    [ `which yum` ] && $(yum install -y epel-release; yum install -y python-pip) && echo \"PIP INSTALLED\"\n",
                                "    [ `which apt-get` ] && apt-get -y update && apt-get -y install python-pip && echo \"PIP INSTALLED\"\n",
                                "fi\n",
                                "pip install --upgrade pip &> /dev/null\n",
                                "pip install awscli --ignore-installed six &> /dev/null\n",
                                "easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\n",
                                "yum install -y ntp pam_krb5 krb5-workstation make gcc bzip2 gcc++ pam-devel libpng libpng-devel\n",
                                "cd / \n",
                                "DomainAdminUser=\"",
                                {
                                    "Ref": "DomainAdminUser"
                                },
                                "\"",
                                "\n",
                                "DomainAdminPassword=\"",
                                {
                                    "Ref": "DomainAdminPassword"
                                },
                                "\"",
                                "\n",
                                "cfn-init -v --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                " --resource ProfileUnityLaunchConfiguration --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "cfn-signal -e $? --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                " --resource ProfileUnityAutoScalingGroup --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            }
        },
        "StratusphereSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enables SSH Access to ProfileUnity Hosts",
                "VpcId": {
                    "Ref": "VPCID"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "RemoteAccessCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": {
                            "Ref": "RemoteAccessCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": {
                            "Ref": "RemoteAccessCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "5501",
                        "ToPort": "5501",
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol": "udp",
                        "FromPort": "5501",
                        "ToPort": "5501",
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol": "icmp",
                        "FromPort": "-1",
                        "ToPort": "-1",
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    }
                ]
            }
        },
        "ProfileUnitySecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enables SSH Access to ProfileUnity Hosts",
                "VpcId": {
                    "Ref": "VPCID"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "3389",
                        "ToPort": "3389",
                        "CidrIp": {
                            "Ref": "RemoteAccessCIDR"
                        }
                    },
                    {
                        "IpProtocol": "icmp",
                        "FromPort": "-1",
                        "ToPort": "-1",
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    }
                ]
            }
        }
    },
    "Outputs": {
        "EIP1": {
            "Description": "Elastic IP for ProfileUnity",
            "Value": {
                "Ref": "EIP1"
            }
        },
        "EIP2": {
            "Description": "Elastic IP for Stratusphere",
            "Value": {
                "Ref": "EIP2"
            }
        },
        "ProfileUnitySecurityGroupID": {
            "Value": {
                "Ref": "ProfileUnitySecurityGroup"
            },
            "Description": "ProfileUnity Security Group ID"
        }
    }
}